// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  email     String  @id
  firstName String  @map("first_name")
  lastName  String  @map("last_name")
  password  String
  orders    Order[]

  @@map("user")
}

model Product {
  id            String         @id @default(uuid())
  icon          String
  name          String
  price         Decimal        @db.Decimal(10, 2)
  description   String?        @db.Text
  orderProducts OrderProduct[]

  @@map("product")
}

model Order {
  id            String         @id @default(uuid())
  user          User           @relation(fields: [userId], references: [email], onDelete: Cascade)
  userId        String         @map("user_id")
  finished      Boolean        @default(false)
  orderProducts OrderProduct[]

  @@map("user_product")
}

model OrderProduct {
  id        String  @id @default(uuid())
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId   String  @map("order_id")
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String  @map("product_id")
  count     Int

  @@unique([orderId, productId])
  @@map("order_product")
}
